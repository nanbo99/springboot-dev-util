server.port=8081
# 数据库配置
spring.datasource.url=jdbc:mysql://localhost:3306/springboot-dev-util?characterEncoding=utf8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root

# 日志配置
logging.config=classpath:logback.xml
logging.level.com.yangbo.springboot.springbootmq.com.yangbo.mapper = debug
spring.rabbitmq.addresses=localhost:5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
spring.rabbitmq.publisher-confirms=true
spring.rabbitmq.publisher-returns=true
spring.rabbitmq.template.mandatory=true
spring.rabbitmq.virtual-host=/
spring.rabbitmq.listener.simple.acknowledge-mode=manual
spring.rabbitmq.listener.simple.concurrency=1
spring.rabbitmq.listener.simple.max-concurrency=1



spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.database=0
spring.redis.password=
spring.redis.timeout=1000000

#使用qq smtp协议发送
spring.mail.host=smtp.qq.com
#如何设置IMAP服务的SSL加密方式？
#使用SSL的通用配置如下：
#接收邮件服务器：imap.qq.com，使用SSL，端口号993
#发送邮件服务器：smtp.qq.com，使用SSL，端口号465或587 测试465不可用 使用587可以连接成功
spring.mail.port=587
#发件箱账号
spring.mail.username=1370151513@qq.com
#使用smtp服务发送，此密码为smtp验证密码，不是邮箱登陆密码
spring.mail.password=fsocqidnvjknifcb
#此配置开启邮箱smtp权限
spring.mail.properties.mail.smtp.auth=true
#启用ssl加密
spring.mail.properties.mail.ssl.enable=true
#此配置可以不用
spring.mail.properties.mail.socketFactory.class=javax.net.ssl.SSLSocketFactory
#使用starttls协议发送时需要配置
spring.mail.properties.mail.starttls.enable=true
spring.mail.properties.mail.starttls.required=true

# 初始化大小，最小，最大
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
